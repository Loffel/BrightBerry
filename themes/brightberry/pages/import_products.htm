title = "import_products"
url = "/import_products"
is_hidden = 0
robot_index = "index"
robot_follow = "follow"
==
<?php
use Dooko\Products\Models\Product;
use Dooko\Products\Models\Category;

function onStart(){
    ini_set('max_execution_time', 6000);
    $baseURL = 'http://brightberry.ru/download/images';

    $products = Db::table('products')
        ->whereRaw("parent_id IN (SELECT id FROM categories WHERE (parent_id = 37 or parent_id = 38))")->get();

    /*
        1 - doma
        2 - kvartiry
        3 - obekty-biznesa
        4 - elitnye-kuhni
        5 - mebel-iz-dereva
        6 - dveri-iz-massiva
        7 - lestnicy
        8 - oformlenie-pomeshchenij
        9 - elementy-interera
        10 - sleb-dereva
        11 - hudozhestvennaya-kovka
        12 - steklo
    */

    foreach($products as $product){
        $product_images = Db::table('images')->where('object_type', 'products')->where('object_id', $product->id)->orderBy('is_main', 'DESC')->get();
        $product_seo = Db::table('seo')->where('url', 'works/obekty/'.$product->url)->first();
        
        $cat = Db::table('categories')->where('id', $product->parent_id)->first();
        if($cat == null) dd($cat, $product);
        $prod = new Product;

        $prod->name = $product->name;
        $prod->description = $product->description == '' ? $product->short_description : $product->description;
        $prod->category_id = ($cat->url != 'gosudarstvennye-obekty') ? (Category::where('slug', $cat->url)->first())->id : 3;
        $prod->description_short = $product->short_description == '' ? $product->description : $product->short_description;
        $prod->slug = $product->url;
        $prod->seo_title = $product->meta_title;
        $prod->seo_description = $product->meta_description;
        $prod->seo_keywords = $product->meta_keywords;

        try{
            $prod->save();
        }catch(Exception $e){
            dd($e, $prod);
        }

        if(!empty($product_images)){
            $tempImage = new System\Models\File;

            $filteredThumb = $product_images->filter(function($item){
                return $item->is_cover == 1;
            })->first();

            if($filteredThumb != NULL)
                $thumbURL = $filteredThumb->url;
            else $thumbURL = $product_images[0]->url;

            try{
                $tempImage->fromUrl($baseURL.$thumbURL);
                
                $prod->photo_thumb()->add($tempImage);
            }catch(Exception $e){

            }
        }

        $loopIndex = 1;
        foreach($product_images as $image){
            if(str_contains($image->caption, "youtube")) continue;
            $tempImage = new System\Models\File;

            $tempCats = Db::select(Db::raw("SELECT name FROM categories WHERE id IN (SELECT category_parent_id FROM images2categories WHERE child_id = $image->id GROUP BY category_parent_id)"));
            $catsString = "";

            $tempI = 1;
            foreach($tempCats as $tempCat){
                $catsString .= '#'.mb_strtolower(str_replace(' ', '', $tempCat->name));

                if($tempI != count($tempCats)) $catsString .= ',';
                ++$tempI;
            }
            //dd($catsString);
            $tempImage->title = $catsString;

            try{
                $tempImage->fromUrl($baseURL.$image->url);
                
                if($prod->category_id <= 3 && $loopIndex <= 5) {
                    $prod->photo_gallery()->add($tempImage);
                }else if($prod->category_id <=3 && $loopIndex > 5){
                    $prod->photo_gallery_add()->add($tempImage);
                }
                
            }catch(Exception $e){

            }
            ++$loopIndex;
        }

    }

    dd('Done!');
}
?>
==
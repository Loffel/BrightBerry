title = "import_subcats"
url = "/import_subcats"
is_hidden = 0
robot_index = "index"
robot_follow = "follow"
==
<?php
use Dooko\Products\Models\Product;
use Dooko\Products\Models\Category;

function onStart(){
    ini_set('max_execution_time', 6000);
    $baseURL = 'http://brightberry.ru/download/images';

    $products = Db::table('categories')
        ->whereRaw("parent_id IN (SELECT id FROM categories WHERE (parent_id = 37 or parent_id = 38))")
        ->whereRaw("id NOT IN (SELECT id FROM categories WHERE (parent_id = 37 or parent_id = 38))")->get();

    /*
        1 - doma
        2 - kvartiry
        3 - obekty-biznesa
        4 - elitnye-kuhni
        5 - mebel-iz-dereva
        6 - dveri-iz-massiva
        7 - lestnicy
        8 - oformlenie-pomeshchenij
        9 - elementy-interera
        10 - sleb-dereva
        11 - hudozhestvennaya-kovka
        12 - steklo
    */

    foreach($products as $product){
        $cat = Db::table('categories')->where('id', $product->parent_id)->first();
        $product_images = Db::table('images')->whereRaw("id IN (SELECT child_id FROM images2categories WHERE category_parent_id = ".$product->id.")")->get();

        if($cat == null) dd($cat, $product);
        $prod = new Product;

        $prod->name = $product->name;
        $prod->description = $product->description;
        
        $prod->category_id = ($cat->url != 'gosudarstvennye-obekty') ? (Category::where('title', $cat->name)->first())->id : 3;
        $prod->description_short = html_entity_decode(str_limit(strip_tags($product->description), 110));
        $prod->slug = $product->url;
        $prod->seo_title = $product->meta_title;
        $prod->seo_description = $product->meta_description;
        $prod->seo_keywords = $product->meta_keywords;

        try{
            $prod->save();
        }catch(Exception $e){
            dd($e, $prod);
        }

        if(!empty($product_images)){
            $tempImage = new System\Models\File;

            try{
                $tempImage->fromUrl($baseURL.$product_images[0]->url);
                
                $prod->photo_thumb()->add($tempImage);
            }catch(Exception $e){

            }
        }

        foreach($product_images as $image){
            if(str_contains($image->caption, "youtube")) continue;
            $tempImage = new System\Models\File;
            $tempImage->title = '#'.mb_strtolower(str_replace(' ', '', $prod->name));
            try{
                $tempImage->fromUrl($baseURL.$image->url);
                $prod->photo_gallery_add()->add($tempImage);
            }catch(Exception $e){

            }
        }
    }

    dd('Done!');
}
?>
==